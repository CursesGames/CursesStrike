.PHONY: all config debug release clean distclean

ROOTDIR := $(CURDIR)
include $(ROOTDIR)/src-build/default-config.mk

# WARNING!
# If you want to move to another architecture, you might have to recompile ncurses from sources!
# cross-compiler
ifeq ($(strip $(CROSS_COMPILE)),)
CROSS_COMPILE := /home/striker/bin/cross-compile/gcc-linaro-4.9-2016.02-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc
endif

override CC := $(CROSS_COMPILE)
# whole solution flags
CFLAGS := -ansi -Wextra -pedantic -Wno-unused-parameter
CFLAGS += -mabi=aapcs-linux -mfloat-abi=hard -march=armv7 -I$(ROOTDIR)/src-build/arch/arm-hf/include
# it is known for me how to link with target glibc, but not ncurses..
LDFLAGS := -L$(ROOTDIR)/src-build/arch/arm-hf/lib -mfloat-abi=hard

# -r: save time by omitting `default' targets
# -R: avoid auto-setting of CC, LD and some other variables
# -s: silence is golden, enjoy short compilation messages
MKFLG := rRs

# export ALL variables
export

# TARGETS
all: config
	@CONFIG=$(CONFIG) $(MAKE) -$(MKFLG)C $(SRCDIR) projects

clean:
	@$(MAKE) -$(MKFLG)C $(SRCDIR) clean

clean-%:
	@$(MAKE) -$(MKFLG)C $(SRCDIR) $@

distclean:
	@$(MAKE) -$(MKFLG)C $(SRCDIR) distclean

# BUILD CONFIGURATIONS
# optimized for eltex tc-50 thin client, you can set another one
# To build everything, type `make` or `make release`, which are equal, or `make debug`
# To build one project, for ex. `cs` in debug configuration, type `CONFIG=debug make cs`
config:
ifeq ($(strip $(CONFIG)),)
CONFIG := release
endif

ifeq ($(CONFIG),release)
CFLAGS += -O3 -D NDEBUG=1 -D RELEASE=1
endif

ifeq ($(CONFIG),debug)
CFLAGS += -O0 -ggdb -ffunction-sections -D DEBUG=1
CFLAGS += -D VALGRIND_SUCKS
endif

debug: CONFIG := debug
debug: all

release: CONFIG := release
release: all

# last resort target, to redirect all lower level targets
# https://www.gnu.org/software/make/manual/html_node/Last-Resort.html
%::
	@CONFIG=$(CONFIG) $(MAKE) -$(MKFLG)C $(SRCDIR) $@
